name: CI

on:
  pull_request:
    branches: [ master, develop ]
  push:
    branches: [ master ]

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    timeout-minutes: 20

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: app_test
        ports:
          - 5432:5432
        # wait for postgres to be ready
        options: >-
          --health-cmd "pg_isready -U postgres -d app_test"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/app_test
      DJANGO_SETTINGS_MODULE: nbxdjango.settings
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONUNBUFFERED: 1
      # SECRET_KEY can be set here for OSS; for private repos prefer Actions secrets

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: |
            requirements*.txt
            pyproject.toml
            setup.cfg
            setup.py

      - name: Install system deps for psycopg
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev build-essential

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            pg_isready -h localhost -p 5432 -U postgres && break
            sleep 2
          done

      - name: Django migrations (optional with pytest-django)
        run: |
          python nbxdjango/manage.py migrate --noinput

      - name: Run tests
        run: |
          DJANGO_SETTINGS_MODULE=nbxdjango.settings pytest nbxdjango/packagehandling/tests -q --maxfail=1 --disable-warnings --cov --cov-report=xml

      - name: Upload coverage (artifact)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-xml
          path: coverage.xml